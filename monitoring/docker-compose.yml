version: '3.8'

services:
  grafana:
    image: grafana/grafana
    ports:
      - '3001:3000'
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
    #  - ./grafana:/etc/grafana/provisioning/datasources
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - monitoring
    deploy:
      replicas: 2
      placement:
        constraints: [node.role == manager]

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    ports:
      - '8088:8080'
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - monitoring
    deploy:
      replicas: 2
      placement:
        constraints: [node.role == manager]

  node:
    image: app:1.0
    container_name: app
    ports:
        - '8000:8000'
    volumes:
        - ./backend:/app
        - /app/node_modules
    networks:
        - monitoring
    deploy:
      replicas: 2
      placement:
        constraints: [node.role == manager]

# mysql-exporter:
#    image: prom/mysqld-exporter
#    container_name: exporter
#   command:
#   - --config.my-cnf=/cfg/.my.cnf
#     - --mysqld.address=139.180.158.237:3306
#    volumes:
#      - "./.my.cnf:/cfg/.my.cnf"
#    ports:
#      - 9104:9104
#    networks:
#      - monitoring

#  mysql:
#    image: mysql:8.0
#    container_name: mysql
#    environment:
#      - MYSQL_DATABASE=admin
#      - MYSQL_ROOT_PASSWORD=admin123
#    ports:
#      - '3306:3306'
#    volumes:
#      - ./mysql:/var/lib/mysql
#    networks:
#      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'
    networks:
      - monitoring
    deploy:
      replicas: 2
      placement:
        constraints: [node.role == manager]

  jenkins:
    image: jenkins/jenkins:lts
    privileged: true
    user: root
    ports:
      - '7080:8080'
      - '50000:50000'
    container_name: jenkins
    volumes:
      - ./jenkins/jenkins-data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/bin/docker:/usr/local/bin/docker
    networks:
      - monitoring
    deploy:
      replicas: 2
      placement:
        constraints: [node.role == manager]


networks:
  monitoring:

volumes:
  grafana-data:
