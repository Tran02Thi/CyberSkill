version: '3.8'

services:
  grafana:
    image: grafana/grafana
    ports:
      - '3000:3000'
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - ./grafana/provisioning-datasources.yml:/etc/grafana/provisioning/datasources/provisioning-datasources.yml
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - infra
      - reverse-proxy
    deploy:
      replicas: 2
      placement:
        constraints: [node.role == manager]

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    env_file:
      - .env
    volumes:
      - ./minio/data:/data
    command: server ~ --address ':9000' --console-address ':9001'
    networks:
      - infra

  createBuckets:
    image: minio/mc
    networks:
      - infra
    depends_on:
      - minio
    entrypoint: >
        /bin/sh -c "
        echo 'Waiting for 15 seconds for MinIO to start...';
        sleep 15;
        echo 'Configuring mc.. ${MINIO_ROOT_USER}';
        /usr/bin/mc config host add log http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
        echo 'Removing old bucket...'; /usr/bin/mc rm -r --force log/app;
        echo 'Creating new bucket...'; /usr/bin/mc mb log/app;
        echo 'Setting public policy...'; /usr/bin/mc policy set public log/app;
        exit 0;
      "
    env_file:
      - .env

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/loki-config.yaml
    command: -config.file=/etc/loki/loki-config.yaml
    networks:
      - infra
    deploy:
      replicas: 2
      placement:
        constraints: [node.role == manager]

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    ports:
      - '8088:8080'
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - infra
      - reverse-proxy
    deploy:
      replicas: 2
      placement:
        constraints: [node.role == manager]

  node:
    image: app:1.0
    container_name: app
    ports:
        - '8000:8000'
    volumes:
        - ./backend:/app
        - /app/node_modules
    networks:
        - infra
        - reverse-proxy
    deploy:
      replicas: 2
      placement:
        constraints: [node.role == manager]


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'
    networks:
      - infra
      - reverse-proxy
    deploy:
      replicas: 2
      placement:
        constraints: [node.role == manager]

  jenkins:
    image: jenkins/jenkins:lts
    privileged: true
    user: root
    ports:
      - '7080:8080'
      - '50000:50000'
    container_name: jenkins
    volumes:
      - ./jenkins/jenkins-data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/bin/docker:/usr/local/bin/docker
    networks:
      - infra
      - reverse-proxy
    deploy:
      replicas: 2
      placement:
        constraints: [node.role == manager]


networks:
  infra:
    name: infra
  reverse-proxy:
    external: true

volumes:
  grafana-data:
